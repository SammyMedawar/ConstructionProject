<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrint.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABskAEAABtkAADABhkAALBBBgAAbJABAAAbZAAAwAYZAACwQQYAAGyQAQAAG2QAAMAGGQAAsEEGAABs
        kAEAABtkAADABhkAALBBBgAAbJABAAAbZAAAwAYZAACwQQYAAGyQAQAAG2QAAMAGGQAAsEEGAABskAEA
        ABtkAADABhkAALBBBgAAbJABAAAbZAAAwAYZAACwQQYAAGyQAQAAG2QAAMAGGQAAsEEGAABskAEAABtk
        AADABhkAALBBBgAAbJABAAAbZAAAwAYZAACwQQYAAGyQAQAAG2QAAMAGGQAc2Enp69PD02Mn7ofST6WX
        SBq28hguz8+1x/hhVp6T7plOTBycAcBOn5eekj6aarejJPVQeY764XRyYjcDgGO6TXprqt1+ktRjl6bT
        EsdmAHBMr0m1206Seu43EsdmAHBUD0i1202SRui8xNEZAByVr/4ljdwliaMzADiqj6Ta7SZJI/ThxNEZ
        ABzV9al2u0nSCJXnMI7OAOCoPpZqt5skjVD5s0COzgDgqH4z1W43SRqh1yWOzgDgqL4r1W43SRqhByeO
        zgDgqE5Ib061206Seu6NiWMzADimM9IfptrtJ0k99vZ0euLYDAB2OjU9L12TarejJPVQeY56TjolsZsB
        wIHdOj0wPSFdeIiVX9SpfX529Z70BkmLVR6DtcfmrspjvvZcsG/lOam8cml5juLgDAAWt++dsLxlMLCc
        8hisPTZ35bm3DwYAizMAYEwGwNgMABZnAMCYDICxGQAszgCAMRkAYzMAWJwBAGMyAMZmALA4AwDGZACM
        zQBgcQYAjMkAGJsBwOIMABiTATA2A4DFGQAwJgNgbAYAizMAYEwGwNgMABZnAMCYDICxGQAszgCAMRkA
        YzMAWJwBAGMyAMZmALA4AwDGZACMzQBgcQYAjMkAGJsBwOIMABiTATA2A4DFGQAwJgNgbAYAizMAYEwG
        wNgMABZnAMCYDICxGQAszgCAMRkAYzMAWJwBAGMyAMZmALA4AwDGZACMbRUD4IJUO+SuHp9YngEAYzIA
        xlaugbXPz67KNbcb/zzVDrmrpyWWZwDAmAyAsT091T4/u3pU6sbDUu2Qu7oosTwDAMZkAIztRan2+dnV
        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
</value>
  </data>
</root>